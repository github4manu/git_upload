C51 COMPILER V7.06   C51_433MHZ_R                                                          08/31/2012 09:05:53 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE C51_433MHZ_R
OBJECT MODULE PLACED IN C51_433mHz_R.OBJ
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE C51_433mHz_R.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          
   2          //Function: This procedure applies to 433mHz modules of receiving
   3          //Platform:STC89C58RD+
   4          //Time:August 30,2012
   5          #include <reg51.h>   
   6          #include <intrins.h>   
   7             
   8          typedef unsigned char uchar;   
   9          typedef unsigned int uint;   
  10          sbit rs = P2^7;     //LCD1602 pins   
  11          sbit rw = P2^6;   
  12          sbit ep = P2^5;
  13             
  14          sbit input = P1^0;  //Received signal pin
  15          
  16          uint xT=12345;   
  17          uchar k; 
  18          
  19          uchar nlcd[]={'0','1','2','3','4','5','6','7','8','9'};     
  20          uchar dis1[] = "welcome to us    ";   
  21          uchar dis2[] = "???              ";   
  22          
  23          void delay(uchar ms)   
  24          {                           // 1ms
  25   1          uchar i;   
  26   1          while(ms--)   
  27   1          {   
  28   2              for(i = 0; i<123; i++);   
  29   2          }   
  30   1      }   
  31             
  32          void uDelay()  //3us 
  33          {   
  34   1          _nop_();   
  35   1          _nop_();   
  36   1          _nop_();   
  37   1      }   
  38             
  39          bit lcd_bz()   
  40          {                           // Test LCD busy status  
  41   1          bit result;   
  42   1          rs = 0;   
  43   1          rw = 1;   
  44   1          ep = 1;   
  45   1          uDelay();   
  46   1          result = (bit)(P0 & 0x80);   
  47   1          ep = 0;   
  48   1          return result;     
  49   1      }   
  50             
  51          lcd_wcmd(uchar cmd)   
  52          {                           // Write instruction to LCD
  53   1          while(lcd_bz());   
  54   1          rs = 0;   
  55   1          rw = 0;   
C51 COMPILER V7.06   C51_433MHZ_R                                                          08/31/2012 09:05:53 PAGE 2   

  56   1          ep = 0;   
  57   1          uDelay();      
  58   1          P0 = cmd;   
  59   1          uDelay();   
  60   1          ep = 1;   
  61   1          uDelay();   
  62   1          ep = 0;        
  63   1      }   
  64             
  65          lcd_pos(uchar pos)   
  66          {                           //Setting the display position 
  67   1          lcd_wcmd(pos | 0x80);   
  68   1      }   
  69             
  70          lcd_wdat(uchar dat)    
  71          {                           //Write characters to the LCD display data
  72   1          while(lcd_bz());   
  73   1          rs = 1;   
  74   1          rw = 0;   
  75   1          ep = 0;   
  76   1          P0 = dat;   
  77   1          uDelay();   
  78   1          ep = 1;   
  79   1          uDelay();   
  80   1          ep = 0;    
  81   1      }   
  82             
  83          lcd_init()   
  84          {                           //LCD initialization
  85   1          lcd_wcmd(0x38);         //   
  86   1          delay(1);   
  87   1          lcd_wcmd(0x0c);         //   
  88   1          delay(1);   
  89   1          lcd_wcmd(0x06);         //   
  90   1          delay(1);   
  91   1          lcd_wcmd(0x01);         //
  92   1          delay(1);   
  93   1      }   
  94             
  95          Number(uint x)  //display data
  96          {   
  97   1          uchar i=0;   
  98   1          uchar temp[6];   
  99   1          if(x>0)   
 100   1          {   while(x)           
 101   2              {   
 102   3                  temp[i]=x%10;   
 103   3                  x=x/10;   
 104   3                  i++;   
 105   3              }   
 106   2              lcd_pos(0x40);   
 107   2              while(i--)   
 108   2              {   
 109   3                  lcd_wdat(nlcd[temp[i]]);   
 110   3              }   
 111   2              lcd_wdat(' ');   
 112   2              uDelay();   
 113   2              lcd_wdat(' ');   
 114   2              uDelay();   
 115   2              lcd_wdat(' ');   
 116   2          }   
 117   1      }   
C51 COMPILER V7.06   C51_433MHZ_R                                                          08/31/2012 09:05:53 PAGE 3   

 118             
 119          void Delay_uS(uchar in_data)   //1us
 120          {   
 121   1          uchar i;   
 122   1          for(i=in_data;i>0;i--);   
 123   1      }   
 124          
 125          uchar processLOW(void)  //Low pulse length = (i * 10 + 27) us  
 126          {   
 127   1           uchar i;   
 128   1           while(input); //Waiting for the arrival of the low-level 
 129   1           Delay_uS(2);  //2us 
 130   1           while(input);  // Waiting for the arrival of the low-level
 131   1           while(!input)   
 132   1           {     
 133   2              i++;   
 134   2              if(i == 106) return 0; //If the pulse is too long, indicating that the interfering signal pulse is
             - generated.  
 135   2              _nop_();  _nop_();   
 136   2           }   
 137   1           return i;   
 138   1      }   
 139            
 140          uchar process(void)  //The length of the high pulse = (i * 10 + 130) us  
 141          {   
 142   1           uchar i;   
 143   1           while(!input);   
 144   1           Delay_uS(15);   
 145   1           if(!input) return 0;    
 146   1           i=0;   
 147   1           while(input)   
 148   1           {     
 149   2              i++;   
 150   2              if(i == 87) return 0;    
 151   2              _nop_();  _nop_();   
 152   2           }   
 153   1           return i;   
 154   1      }   
 155             
 156           
 157          uchar receive(void)//recive data   
 158          {   
 159   1          uchar in_data=0;   
 160   1          uchar j,i;   
 161   1          j=processLOW();   
 162   1          if(j>72)//Judged low level is valid 
 163   1          {      
 164   2              for(i=0;i<8;i++)   
 165   2              {   
 166   3                  j=process();   
 167   3                  in_data<<=1;   
 168   3                  if(j>53)     //Measuring the level of "1", then add 1. 
 169   3                      in_data=in_data|1;   
 170   3                  else if(j>19 && j<46)//Low effective length of between 20-45.
 171   3                      in_data=in_data|0;   
 172   3                  else   
 173   3                      return 0;   
 174   3               }   
 175   2           }   
 176   1           else   
 177   1              return 0;    
 178   1           return(in_data);   
C51 COMPILER V7.06   C51_433MHZ_R                                                          08/31/2012 09:05:53 PAGE 4   

 179   1      }   
 180             
 181          main()   
 182          {   
 183   1          uchar i;   
 184   1          lcd_init();             // initialization LCD1602              
 185   1          delay(10);   
 186   1          lcd_pos(0); // Set the display position of the character 0 of the first row of the first  
 187   1          while(dis1[i] != '\0')   
 188   1          {                       //   
 189   2              lcd_wdat(dis1[i]);   
 190   2              i++;   
 191   2          }      
 192   1          while(1)   
 193   1          {            
 194   2              input=1;   
 195   2              if(input)   
 196   2              {             
 197   3                  xT=receive();   
 198   3                  Number(xT);    
 199   3              }     
 200   2          }   
 201   1         
 202   1      }    


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    412    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     49      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
